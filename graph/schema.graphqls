# GraphQL schema example
#
# https://gqlgen.com/getting-started/

directive @goField(
  forceResolver: Boolean
  name: String
) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION

# new directive
directive @auth on FIELD_DEFINITION

type Category {
  _id: ID!
  name: String!
}
type Comment {
  _id: ID!
  body: String!
  user: User
  userId: ID!
  post: Post!
  postId: ID!
  createAt: String
  updatedAt: String
}
type Post {
  _id: ID!
  title: String!
  body: String!
  category: Category
  categoryId: ID!
  user: User!
  userId: ID!
  comments: [Comment!]!
  createAt: String
  updatedAt: String
}
type Credentials {
  _id: ID!
  userId: ID!
  isAdmin: Boolean!
  isAuthor: Boolean!
}

type User {
  _id: ID!
  username: String!
  password: String!
  name: String!
  credentials: Credentials!
  token: String!
}

type Mutation {
  createCategory(name: String!): Category
  deleteCategory(_id: ID!): Category
  updateCategory(_id: ID!, name: String!): Category
  createUser(username: String!, password: String!, name: String!): User!
  login(username: String!, password: String!): User!
  updatePassword(
    username: String!
    oldPassword: String!
    newPassword: String!
  ): Boolean
  createComment(body: String!, postId: ID!, userId: ID!): Comment
  deleteComment(_id: ID!): Comment
  updateComment(_id: ID!, body: String!): Comment
  createPost(title: String, body: String, categoryId: ID, userId: ID): Post
  deletePost(_id: ID!): Post
  updatePost(_id: ID!, title: String, body: String, categoryId: ID!): Post
}
type Query {
  user(_id: ID!): User
  protected: String! @goField(forceResolver: true) @auth
  users: [User!]!
  category(_id: ID!): Category
  categories: [Category!]!
  post(_id: ID!): Post
  posts: [Post!]!
  comment(_id: ID!): Comment
  comments: [Comment!]!
}
